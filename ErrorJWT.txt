protected override void OnModelCreating(ModelBuilder modelBuilder)
{
    // Convert enum to string in the database
    modelBuilder.Entity<User>()
        .Property(u => u.UserRole)
        .HasConversion<string>();

    // Configuring User (One-to-Many) → Children (ON DELETE CASCADE)
    modelBuilder.Entity<User>()
        .HasMany(u => u.Children)
        .WithOne()
        .HasForeignKey(c => c.UserId)
        .OnDelete(DeleteBehavior.Cascade); // Deleting a User deletes their Children

    // Configuring User (One-to-Many) → Appointments (RESTRICT DELETE to prevent cascade issues)
    modelBuilder.Entity<User>()
        .HasMany(u => u.Appointments)
        .WithOne(a => a.User)
        .HasForeignKey(a => a.DoctorId)
        .OnDelete(DeleteBehavior.Restrict);  // Prevent cascade delete from Doctor to Appointment

    // Configuring Child (One-to-Many) → Appointments (ON DELETE CASCADE)
    modelBuilder.Entity<Child>()
        .HasMany(c => c.Appointments)
        .WithOne(a => a.Child)
        .HasForeignKey(a => a.ChildId)
        .OnDelete(DeleteBehavior.Cascade);  // Deleting a Child deletes their Appointments

    // Configuring Appointment (Many-to-One) → Vaccine (RESTRICT DELETE)
    modelBuilder.Entity<Appointment>()
        .HasOne(a => a.Vaccine)
        .WithMany()
        .HasForeignKey(a => a.VaccineId)
        .OnDelete(DeleteBehavior.Restrict); // Prevent cascade delete

    base.OnModelCreating(modelBuilder);
}