<div class="container">
  <h2>Sign Up</h2>

  <form [formGroup]="signUpForm" (ngSubmit)="submitSignUp()">
    <mat-grid-list cols="2" rowHeight="auto" gutterSize="20px">
      <!-- First Name -->
      <mat-grid-tile>
        <mat-form-field appearance="outline" class="full-width">
          <mat-label>First Name</mat-label>
          <input matInput formControlName="firstName" />
          <mat-error *ngIf="signUpForm.get('firstName')?.invalid">
            First name is required
          </mat-error>
        </mat-form-field>
      </mat-grid-tile>

      <!-- Last Name -->
      <mat-grid-tile>
        <mat-form-field appearance="outline" class="full-width">
          <mat-label>Last Name</mat-label>
          <input matInput formControlName="lastName" />
          <mat-error *ngIf="signUpForm.get('lastName')?.invalid">
            Last name is required
          </mat-error>
        </mat-form-field>
      </mat-grid-tile>

      <!-- Email -->
      <mat-grid-tile>
        <mat-form-field appearance="outline" class="full-width">
          <mat-label>Email</mat-label>
          <input matInput formControlName="email" type="email" />
          <mat-error *ngIf="signUpForm.get('email')?.invalid">
            Enter a valid email address
          </mat-error>
        </mat-form-field>
      </mat-grid-tile>

      <!-- Role -->
      <mat-grid-tile>
        <mat-form-field appearance="outline" class="full-width">
          <mat-label>Role</mat-label>
          <mat-select formControlName="userRole">
            <mat-option value="USER">USER</mat-option>
            <mat-option value="ADMIN">ADMIN</mat-option>
          </mat-select>
          <mat-error *ngIf="signUpForm.get('userRole')?.invalid">
            Role is required
          </mat-error>
        </mat-form-field>
      </mat-grid-tile>

      <!-- Password -->
      <mat-grid-tile>
        <mat-form-field appearance="outline" class="full-width">
          <mat-label>Password</mat-label>
          <input matInput [type]="hidePassword ? 'password' : 'text'" formControlName="password" />
          <button mat-icon-button matSuffix (click)="togglePasswordVisibility()">
            <mat-icon>{{ hidePassword ? 'visibility_off' : 'visibility' }}</mat-icon>
          </button>
          <mat-error *ngIf="signUpForm.get('password')?.invalid">
            Password is required (min 6 characters)
          </mat-error>
        </mat-form-field>
      </mat-grid-tile>

      <!-- Confirm Password -->
      <mat-grid-tile>
        <mat-form-field appearance="outline" class="full-width">
          <mat-label>Confirm Password</mat-label>
          <input matInput [type]="hidePassword ? 'password' : 'text'" formControlName="confirmPassword" />
          <button mat-icon-button matSuffix (click)="togglePasswordVisibility()">
            <mat-icon>{{ hidePassword ? 'visibility_off' : 'visibility' }}</mat-icon>
          </button>
          <mat-error *ngIf="signUpForm.get('confirmPassword')?.invalid">
            Passwords must match
          </mat-error>
        </mat-form-field>
      </mat-grid-tile>

      <!-- Contact Number -->
      <mat-grid-tile>
        <mat-form-field appearance="outline" class="full-width">
          <mat-label>Contact Number</mat-label>
          <input matInput formControlName="contactNumber" />
          <mat-error *ngIf="signUpForm.get('contactNumber')?.invalid">
            Enter a valid contact number
          </mat-error>
        </mat-form-field>
      </mat-grid-tile>
    </mat-grid-list>

    <!-- Sign Up Button -->
    <div class="button-container">
      <button mat-raised-button color="primary" type="submit" [disabled]="signUpForm.invalid">
        Sign Up
      </button>
    </div>
  </form>
</div>





import { Component } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';

@Component({
  selector: 'app-signup',
  templateUrl: './signup.component.html',
  styleUrls: ['./signup.component.css']
})
export class SignupComponent {
  signUpForm: FormGroup;
  hidePassword = true;

  constructor(private fb: FormBuilder) {
    this.signUpForm = this.fb.group({
      firstName: ['', Validators.required],
      lastName: ['', Validators.required],
      email: ['', [Validators.required, Validators.email]],
      userRole: ['', Validators.required],
      password: ['', [Validators.required, Validators.minLength(6)]],
      confirmPassword: ['', Validators.required],
      contactNumber: ['', Validators.required]
    }, { validator: this.passwordMatchValidator });
  }

  togglePasswordVisibility(): void {
    this.hidePassword = !this.hidePassword;
  }

  passwordMatchValidator(form: FormGroup) {
    return form.get('password')?.value === form.get('confirmPassword')?.value
      ? null : { mismatch: true };
  }

  submitSignUp() {
    if (this.signUpForm.valid) {
      console.log('Sign Up Form Data:', this.signUpForm.value);
    }
  }
}




.container {
  max-width: 600px;
  margin: 40px auto;
  padding: 20px;
  border-radius: 10px;
  background: #fff;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
}

mat-grid-list {
  width: 100%;
}

mat-grid-tile {
  padding: 10px;
}

mat-form-field {
  width: 100%;
}

.button-container {
  display: flex;
  justify-content: center;
  margin-top: 20px;
}

button {
  padding: 12px 24px;
  font-size: 16px;
  width: 100%;
}

button:hover {
  background-color: rgb(0, 55, 210) !important;
  border-color: rgb(0, 55, 210) !important;
}


